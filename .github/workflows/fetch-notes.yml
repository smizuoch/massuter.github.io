name: Fetch Note Articles via RSS

on:
  schedule:
    - cron: '0 0 * * *' # 毎日午前0時 (UTC) に実行 (日本時間午前9時)
  workflow_dispatch: # 手動実行も可能にする

permissions:
  contents: write # リポジトリへの書き込み権限が必要

jobs:
  fetch_and_commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python # RSSパース用にPythonを使用 (他のツールでも可)
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install feedparser
        run: pip install feedparser

      - name: Fetch RSS feed and generate YAML
        id: fetch_rss
        run: |
          python -c "
          import feedparser
          import yaml
          import datetime
          from dateutil import parser as date_parser # より柔軟な日付パース

          url = 'https://note.com/massuter/rss' # まっすたー様のNote RSSフィードURL
          feed = feedparser.parse(url)
          notes_data = []

          for entry in feed.entries[:10]: # 最新10件を取得 (件数は調整可能)
              published_time = datetime.datetime.now(datetime.timezone.utc) # デフォルト値
              if hasattr(entry, 'published_parsed') and entry.published_parsed:
                  published_time = datetime.datetime(*entry.published_parsed[:6], tzinfo=datetime.timezone.utc)
              elif hasattr(entry, 'updated_parsed') and entry.updated_parsed: # publishedがない場合updatedを見る
                  published_time = datetime.datetime(*entry.updated_parsed[:6], tzinfo=datetime.timezone.utc)

              # サムネイルや概要の取得 (RSSフィードに含まれていれば)
              thumbnail = None
              description = None
              if 'media_thumbnail' in entry and entry.media_thumbnail:
                  thumbnail = entry.media_thumbnail[0]['url']
              elif 'links' in entry: # enclosure タグなどから画像を探す試み
                  for link in entry.links:
                      if link.get('rel') == 'enclosure' and link.get('type', '').startswith('image/'):
                          thumbnail = link.get('href')
                          break
              if hasattr(entry, 'summary'):
                  description = entry.summary

              notes_data.append({
                  'title': entry.title,
                  'url': entry.link,
                  'published_at': published_time.isoformat(), # ISO 8601形式で保存
                  'thumbnail': thumbnail,
                  'description': description
              })

          # YAMLファイルへの書き込み準備
          output_yaml = '# This file is auto-generated by GitHub Actions\n'
          output_yaml += '# Do not edit manually\n'
          output_yaml += f'# Last updated: {datetime.datetime.now(datetime.timezone.utc).isoformat()}\n\n'
          output_yaml += yaml.dump(notes_data, allow_unicode=True, sort_keys=False)

          with open('_data/notes.yml', 'w', encoding='utf-8') as f:
              f.write(output_yaml)

          print('Generated _data/notes.yml')
          "

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add _data/notes.yml
          # 変更があった場合のみコミット・プッシュ
          if ! git diff --staged --quiet; then
            git commit -m "Update Note articles from RSS feed"
            git push
          else
            echo "No changes to commit."
          fi